<UserControl x:Class="SHC_Rebalancer.OptionsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SHC_Rebalancer"
             xmlns:se="clr-namespace:StswExpress;assembly=StswExpress"
             mc:Ignorable="d" d:DataContext="{d:DesignInstance local:MainContext}">
    <UserControl.Resources>
        <se:StswBindingProxy x:Key="proxy" Proxy="{Binding}"/>
    </UserControl.Resources>

    <se:StswScrollView Margin="-3">
        <StackPanel DataContext="{Binding [options][0].Options, Source={x:Static local:StorageService.Configs}}" Margin="6" Orientation="Vertical" Width="500">
            <StackPanel.Resources>
                <Style TargetType="{x:Type se:StswSlider}">
                    <Setter Property="IsSelectionRangeEnabled" Value="True"/>
                    <Setter Property="IsSnapToTickEnabled" Value="True"/>
                    <Setter Property="Margin" Value="3 7"/>
                    <Setter Property="SelectionEnd" Value="{Binding Value, RelativeSource={RelativeSource Self}}"/>
                </Style>
                <Style TargetType="{x:Type se:StswSubCheck}">
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="IconUnchecked" Value="{x:Static se:StswIcons.CloseThick}"/>
                    <Setter Property="IconChecked" Value="{x:Static se:StswIcons.CheckBold}"/>
                    <Setter Property="IconIndeterminate" Value="{x:Static se:StswIcons.Help}"/>
                    <Setter Property="IconScale" Value="2"/>
                    <Style.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="IconFill" Value="{DynamicResource StswDialog.Error.Background}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="IconFill" Value="{DynamicResource StswDialog.Success.Background}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="IconFill" Value="{DynamicResource StswDialog.Warning.Background}"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="IsHitTestVisible" Value="False"/>
                            <Setter Property="IconUnchecked" Value="{x:Static se:StswIcons.Close}"/>
                            <Setter Property="IconChecked" Value="{x:Static se:StswIcons.Check}"/>
                            <Setter Property="IconIndeterminate" Value="{x:Static se:StswIcons.Help}"/>
                            <Setter Property="IconFill" Value="{DynamicResource StswDialog.None.Border}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="{x:Type se:StswSubRadio}">
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="IconScale" Value="2"/>
                    <Style.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="IconData" Value="{x:Static se:StswIcons.CloseCircleOutline}"/>
                            <Setter Property="IconFill" Value="{DynamicResource StswDialog.Error.Background}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="IconData" Value="{x:Static se:StswIcons.CheckCircleOutline}"/>
                            <Setter Property="IconFill" Value="{DynamicResource StswDialog.Success.Background}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="IconData" Value="{x:Static se:StswIcons.HelpCircleOutline}"/>
                            <Setter Property="IconFill" Value="{DynamicResource StswDialog.Warning.Background}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style x:Key="Description" TargetType="{x:Type se:StswText}">
                    <Setter Property="Background" Value="#2777"/>
                    <Setter Property="FontSize" Value="11"/>
                    <Setter Property="Margin" Value="3"/>
                    <Setter Property="Padding" Value="5"/>
                    <Setter Property="Opacity" Value="0.8"/>
                    <Setter Property="TextAlignment" Value="Justify"/>
                    <Setter Property="TextWrapping" Value="Wrap"/>
                </Style>
                <Style TargetType="{x:Type se:StswText}">
                    <Setter Property="TextAlignment" Value="Center"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                </Style>
            </StackPanel.Resources>
            
            <!-- ... -->
            <se:StswToggleSwitch Content="Show details" IsChecked="{Binding ShowOptionsDetails, Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}" Margin="3"/>

            <!-- bugfixes -->
            <se:StswGroupBox BorderThickness="1" Margin="0 5" SeparatorThickness="1">
                <se:StswGroupBox.Header>
                    <se:StswLabel Content="BUGFIXES" FontSize="10" FontWeight="Heavy" HorizontalContentAlignment="Center" IconData="{x:Static se:StswIcons.BugCheckOutline}"/>
                </se:StswGroupBox.Header>

                <StackPanel>
                    <!-- fix demolishing of inaccessible buildings -->
                    <se:StswSubCheck Content="Fix demolishing of inaccessible buildings"
                                     FontWeight="Medium"
                                     IsChecked="{Binding SelectedOptions[FixDemolishingOfInaccessibleBuildings], Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"
                                     IsReadOnly="False"
                                     Margin="3"/>
                    <se:StswText Style="{StaticResource Description}" Visibility="{Binding ShowOptionsDetails, Source={StaticResource Settings}, Converter={x:Static se:StswBoolConverter.Instance}}">
                        <Run Text="{Binding [FixDemolishingOfInaccessibleBuildings].Description, Mode=OneWay}"/>
                        <LineBreak/>
                        <LineBreak/>
                        <Run FontSize="10" Text="Source:"/>
                        <Run FontSize="10" Text="{Binding [FixDemolishingOfInaccessibleBuildings].Source, Mode=OneWay}" FontWeight="Bold"/>
                    </se:StswText>
                    <se:StswSeparator BorderThickness="1" Margin="-3 3"/>

                    <!-- fix ox tether spam -->
                    <se:StswSubCheck Content="Fix ox tether spam"
                                     FontWeight="Medium"
                                     IsChecked="{Binding SelectedOptions[FixOxTetherSpam], Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"
                                     IsReadOnly="False"
                                     Margin="3"/>
                    <se:StswText Style="{StaticResource Description}" Visibility="{Binding ShowOptionsDetails, Source={StaticResource Settings}, Converter={x:Static se:StswBoolConverter.Instance}}">
                        <Run Text="{Binding [FixOxTetherSpam].Description, Mode=OneWay}"/>
                        <LineBreak/>
                        <LineBreak/>
                        <Run FontSize="10" Text="Source:"/>
                        <Run FontSize="10" Text="{Binding [FixOxTetherSpam].Source, Mode=OneWay}" FontWeight="Bold"/>
                    </se:StswText>
                    <se:StswSeparator BorderThickness="1" Margin="-3 3"/>

                    <!-- fix limit for tower engines -->
                    <se:StswSubCheck Content="Fix limit for tower engines"
                                     FontWeight="Medium"
                                     IsChecked="{Binding SelectedOptions[FixLimitForTowerEngines], Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"
                                     IsReadOnly="False"
                                     Margin="3"/>
                    <se:StswText Style="{StaticResource Description}" Visibility="{Binding ShowOptionsDetails, Source={StaticResource Settings}, Converter={x:Static se:StswBoolConverter.Instance}}">
                        <Run Text="{Binding [FixLimitForTowerEngines].Description, Mode=OneWay}"/>
                        <LineBreak/>
                        <LineBreak/>
                        <Run FontSize="10" Text="Source:"/>
                        <Run FontSize="10" Text="{Binding [FixLimitForTowerEngines].Source, Mode=OneWay}" FontWeight="Bold"/>
                    </se:StswText>
                    <se:StswSeparator BorderThickness="1" Margin="-3 3"/>

                    <!-- fix ai no laddermen when enclosed -->
                    <se:StswSubCheck Content="Fix AI not using laddermen if they are enclosed"
                                     FontWeight="Medium"
                                     IsChecked="{Binding SelectedOptions[FixAiNoLaddermenWhenEnclosed], Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"
                                     IsReadOnly="False"
                                     Margin="3"/>
                    <se:StswText Style="{StaticResource Description}" Visibility="{Binding ShowOptionsDetails, Source={StaticResource Settings}, Converter={x:Static se:StswBoolConverter.Instance}}">
                        <Run Text="{Binding [FixAiNoLaddermenWhenEnclosed].Description, Mode=OneWay}"/>
                        <LineBreak/>
                        <LineBreak/>
                        <Run FontSize="10" Text="Source:"/>
                        <Run FontSize="10" Text="{Binding [FixAiNoLaddermenWhenEnclosed].Source, Mode=OneWay}" FontWeight="Bold"/>
                    </se:StswText>
                    <se:StswSeparator BorderThickness="1" Margin="-3 3"/>

                    <!-- fix fletcher pathing -->
                    <se:StswSubCheck Content="Fix fletcher pathing"
                                     FontWeight="Medium"
                                     IsChecked="{Binding SelectedOptions[FixFletcherPathing], Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"
                                     IsReadOnly="False"
                                     Margin="3"/>
                    <se:StswText Style="{StaticResource Description}" Visibility="{Binding ShowOptionsDetails, Source={StaticResource Settings}, Converter={x:Static se:StswBoolConverter.Instance}}">
                        <Run Text="{Binding [FixFletcherPathing].Description, Mode=OneWay}"/>
                        <LineBreak/>
                        <LineBreak/>
                        <Run FontSize="10" Text="Source:"/>
                        <Run FontSize="10" Text="{Binding [FixFletcherPathing].Source, Mode=OneWay}" FontWeight="Bold"/>
                    </se:StswText>
                    <se:StswSeparator BorderThickness="1" Margin="-3 3"/>

                    <!-- fix weapon orders to match -->
                    <se:StswSubCheck Content="Fix weapon orders to match"
                                     FontWeight="Medium"
                                     IsChecked="{Binding SelectedOptions[FixWeaponOrdersToMatch], Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"
                                     IsReadOnly="False"
                                     Margin="3"/>
                    <se:StswText Style="{StaticResource Description}" Visibility="{Binding ShowOptionsDetails, Source={StaticResource Settings}, Converter={x:Static se:StswBoolConverter.Instance}}">
                        <Run Text="{Binding [FixWeaponOrdersToMatch].Description, Mode=OneWay}"/>
                        <LineBreak/>
                        <LineBreak/>
                        <Run FontSize="10" Text="Source:"/>
                        <Run FontSize="10" Text="{Binding [FixWeaponOrdersToMatch].Source, Mode=OneWay}" FontWeight="Bold"/>
                    </se:StswText>

                </StackPanel>
            </se:StswGroupBox>

            <!-- ai -->
            <se:StswGroupBox BorderThickness="1" Margin="0 5" SeparatorThickness="1">
                <se:StswGroupBox.Header>
                    <se:StswLabel Content="AI" FontSize="10" FontWeight="Heavy" HorizontalContentAlignment="Center" IconData="{x:Static se:StswIcons.RobotConfusedOutline}"/>
                </se:StswGroupBox.Header>

                <StackPanel>
                    <!-- ai defence only recruitment time -->
                    <se:StswSubCheck Content="AI defence-only recruitment time:"
                                     FontWeight="Medium"
                                     IsChecked="{Binding SelectedOptions[AiDefenceOnlyRecruitmentTime], Mode=OneWay, Source={StaticResource Settings}, Converter={x:Static se:StswCompareConverter.Instance}, ConverterParameter='!6', UpdateSourceTrigger=PropertyChanged}"
                                     IsReadOnly="True"
                                     Margin="3"/>
                    <DockPanel>
                        <se:StswText DockPanel.Dock="Right"
                                     Text="{Binding SelectedOptions[AiDefenceOnlyRecruitmentTime], Mode=OneWay, Source={StaticResource Settings}}"
                                     TextAlignment="Center"
                                     VerticalAlignment="Center"
                                     Width="50"/>
                        <se:StswSlider Maximum="60" TickFrequency="1" Value="{Binding SelectedOptions[AiDefenceOnlyRecruitmentTime], Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"/>
                    </DockPanel>
                    <se:StswText Style="{StaticResource Description}" Visibility="{Binding ShowOptionsDetails, Source={StaticResource Settings}, Converter={x:Static se:StswBoolConverter.Instance}}">
                        <Run Text="{Binding [AiDefenceOnlyRecruitmentTime].Description, Mode=OneWay}"/>
                        <LineBreak/>
                        <LineBreak/>
                        <Run FontSize="10" Text="Source:"/>
                        <Run FontSize="10" Text="{Binding [AiDefenceOnlyRecruitmentTime].Source, Mode=OneWay}" FontWeight="Bold"/>
                    </se:StswText>
                    <se:StswSeparator BorderThickness="1" Margin="-3 3"/>

                    <!-- ai attack troops limit -->
                    <se:StswSubCheck Content="AI attack troops limit:"
                                     FontWeight="Medium"
                                     IsChecked="{Binding SelectedOptions[AiAttackTroopsLimit], Mode=OneWay, Source={StaticResource Settings}, Converter={x:Static se:StswCompareConverter.Instance}, ConverterParameter='!200', UpdateSourceTrigger=PropertyChanged}"
                                     IsReadOnly="True"
                                     Margin="3"/>
                    <DockPanel>
                        <se:StswText DockPanel.Dock="Right" Text="{Binding SelectedOptions[AiAttackTroopsLimit], Mode=OneWay, Source={StaticResource Settings}}" Width="50"/>
                        <se:StswSlider Maximum="5000" TickFrequency="50" Value="{Binding SelectedOptions[AiAttackTroopsLimit], Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"/>
                    </DockPanel>
                    <se:StswText Style="{StaticResource Description}" Visibility="{Binding ShowOptionsDetails, Source={StaticResource Settings}, Converter={x:Static se:StswBoolConverter.Instance}}">
                        <Run Text="{Binding [AiAttackTroopsLimit].Description, Mode=OneWay}"/>
                        <LineBreak/>
                        <LineBreak/>
                        <Run FontSize="10" Text="Source:"/>
                        <Run FontSize="10" Text="{Binding [AiAttackTroopsLimit].Source, Mode=OneWay}" FontWeight="Bold"/>
                    </se:StswText>
                    <se:StswSeparator BorderThickness="1" Margin="-3 3"/>

                    <!-- ai attack target -->
                    <se:StswSubLabel Content="AI attack target:"
                                     FontWeight="Normal"
                                     HorizontalAlignment="Left"
                                     Margin="3"
                                     Padding="3"/>
                    <StackPanel>
                        <se:StswSubRadio Content="default"
                                         FontWeight="Medium"
                                         GroupName="AiAttackTarget"
                                         IsChecked="{Binding SelectedOptions[AiAttackTarget], Source={StaticResource Settings}, Converter={x:Static se:StswRadioConverter.Instance}, ConverterParameter=0, UpdateSourceTrigger=PropertyChanged}"
                                         Margin="3"/>
                        <se:StswSubRadio Content="nearest enemy"
                                         FontWeight="Medium"
                                         GroupName="AiAttackTarget"
                                         IsChecked="{Binding SelectedOptions[AiAttackTarget], Source={StaticResource Settings}, Converter={x:Static se:StswRadioConverter.Instance}, ConverterParameter=1, UpdateSourceTrigger=PropertyChanged}"
                                         Margin="3"/>
                        <se:StswSubRadio Content="richest enemy"
                                         FontWeight="Medium"
                                         GroupName="AiAttackTarget"
                                         IsChecked="{Binding SelectedOptions[AiAttackTarget], Source={StaticResource Settings}, Converter={x:Static se:StswRadioConverter.Instance}, ConverterParameter=2, UpdateSourceTrigger=PropertyChanged}"
                                         Margin="3"/>
                        <se:StswSubRadio Content="weakest enemy"
                                         FontWeight="Medium"
                                         GroupName="AiAttackTarget"
                                         IsChecked="{Binding SelectedOptions[AiAttackTarget], Source={StaticResource Settings}, Converter={x:Static se:StswRadioConverter.Instance}, ConverterParameter=3, UpdateSourceTrigger=PropertyChanged}"
                                         Margin="3"/>
                    </StackPanel>
                    <se:StswText Style="{StaticResource Description}" Visibility="{Binding ShowOptionsDetails, Source={StaticResource Settings}, Converter={x:Static se:StswBoolConverter.Instance}}">
                        <Run Text="{Binding [AiAttackTarget0].Description, Mode=OneWay}"/>
                        <LineBreak/>
                        <LineBreak/>
                        <Run FontSize="10" Text="Source:"/>
                        <Run FontSize="10" Text="{Binding [AiAttackTarget0].Source, Mode=OneWay}" FontWeight="Bold"/>
                    </se:StswText>
                    <se:StswSeparator BorderThickness="1" Margin="-3 3"/>

                    <!-- ai disable sleeping when no resources -->
                    <se:StswSubCheck Content="Disable sleeping mode for lack of resources"
                                     FontWeight="Medium"
                                     IsChecked="{Binding SelectedOptions[AiDisableSleepingWhenNoResources], Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"
                                     IsReadOnly="False"
                                     Margin="3"/>
                    <se:StswText Style="{StaticResource Description}" Visibility="{Binding ShowOptionsDetails, Source={StaticResource Settings}, Converter={x:Static se:StswBoolConverter.Instance}}">
                        <Run Text="{Binding [AiDisableSleepingWhenNoResources].Description, Mode=OneWay}"/>
                        <LineBreak/>
                        <LineBreak/>
                        <Run FontSize="10" Text="Source:"/>
                        <Run FontSize="10" Text="{Binding [AiDisableSleepingWhenNoResources].Source, Mode=OneWay}" FontWeight="Bold"/>
                    </se:StswText>
                    <se:StswSeparator BorderThickness="1" Margin="-3 3"/>

                    <!-- ai disable demolishing -->
                    <se:StswSubLabel Content="Disable demolishing for money by AI lords:"
                                     FontWeight="Normal"
                                     HorizontalAlignment="Left"
                                     Margin="3"
                                     Padding="3"/>
                    <StackPanel>
                        <se:StswSubCheck Content="fortifications"
                                         FontWeight="Medium"
                                         IsChecked="{Binding SelectedOptions[AiDisableDemolishingFortifications], Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"
                                         IsReadOnly="False"
                                         Margin="3"/>
                        <se:StswSubCheck Content="if enclosed"
                                         FontWeight="Medium"
                                         IsChecked="{Binding SelectedOptions[AiDisableDemolishingIfEnclosed], Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"
                                         IsReadOnly="False"
                                         Margin="3"/>
                        <se:StswSubCheck Content="buildings"
                                         FontWeight="Medium"
                                         IsChecked="{Binding SelectedOptions[AiDisableDemolishingBuildings], Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"
                                         IsReadOnly="False"
                                         Margin="3"/>
                    </StackPanel>
                    <se:StswText Style="{StaticResource Description}" Visibility="{Binding ShowOptionsDetails, Source={StaticResource Settings}, Converter={x:Static se:StswBoolConverter.Instance}}">
                        <Run Text="{Binding [AiDisableDemolishingFortifications].Description, Mode=OneWay}"/>
                        <LineBreak/>
                        <LineBreak/>
                        <Run FontSize="10" Text="Source:"/>
                        <Run FontSize="10" Text="{Binding [AiDisableDemolishingFortifications].Source, Mode=OneWay}" FontWeight="Bold"/>
                    </se:StswText>
                    <se:StswSeparator BorderThickness="1" Margin="-3 3"/>

                    <!-- ai attack troops increase -->
                    <se:StswSubLabel Content="Increase the rate of additional attack troops:"
                                     FontWeight="Normal"
                                     HorizontalAlignment="Left"
                                     Margin="3"
                                     Padding="3"/>
                    <StackPanel>
                        <DockPanel>
                            <se:StswSubRadio Content="addend"
                                             FontWeight="Medium"
                                             GroupName="AiAttackTroopsIncrease"
                                             IsChecked="{Binding SelectedOptions[AiAttackTroopsIncrease], Source={StaticResource Settings}, Converter={x:Static se:StswRadioConverter.Instance}, ConverterParameter=0, UpdateSourceTrigger=PropertyChanged}"
                                             Margin="3"
                                             Width="100"/>
                            <se:StswText DockPanel.Dock="Right" Text="{Binding SelectedOptions[AiAttackTroopsIncrease0], Mode=OneWay, Source={StaticResource Settings}}" Width="50"/>
                            <se:StswSlider Maximum="250" TickFrequency="1" IsEnabled="{Binding SelectedOptions[AiAttackTroopsIncrease], Mode=OneWay, Source={StaticResource Settings}, Converter={x:Static se:StswCompareConverter.Instance}, ConverterParameter='=0'}" Value="{Binding SelectedOptions[AiAttackTroopsIncrease0], Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"/>
                        </DockPanel>
                        <se:StswText Style="{StaticResource Description}" Visibility="{Binding ShowOptionsDetails, Source={StaticResource Settings}, Converter={x:Static se:StswBoolConverter.Instance}}">
                            <Run Text="{Binding [AiAttackTroopsIncrease0].Description, Mode=OneWay}"/>
                            <LineBreak/>
                            <LineBreak/>
                            <Run FontSize="10" Text="Source:"/>
                            <Run FontSize="10" Text="{Binding [AiAttackTroopsIncrease0].Source, Mode=OneWay}" FontWeight="Bold"/>
                        </se:StswText>

                        <DockPanel>
                            <se:StswSubRadio Content="multiplier"
                                             FontWeight="Medium"
                                             GroupName="AiAttackTroopsIncrease"
                                             IsChecked="{Binding SelectedOptions[AiAttackTroopsIncrease], Source={StaticResource Settings}, Converter={x:Static se:StswRadioConverter.Instance}, ConverterParameter=1, UpdateSourceTrigger=PropertyChanged}"
                                             Margin="3"
                                             Width="100"/>
                            <se:StswText DockPanel.Dock="Right" Text="{Binding SelectedOptions[AiAttackTroopsIncrease1], Mode=OneWay, StringFormat=N1, Source={StaticResource Settings}, Converter={x:Static se:StswCalculateConverter.Instance}, ConverterParameter=*0.1}" Width="50"/>
                            <se:StswSlider Maximum="50" TickFrequency="1" IsEnabled="{Binding SelectedOptions[AiAttackTroopsIncrease], Mode=OneWay, Source={StaticResource Settings}, Converter={x:Static se:StswCompareConverter.Instance}, ConverterParameter='=1'}" Value="{Binding SelectedOptions[AiAttackTroopsIncrease1], Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"/>
                        </DockPanel>
                        <se:StswText Style="{StaticResource Description}" Visibility="{Binding ShowOptionsDetails, Source={StaticResource Settings}, Converter={x:Static se:StswBoolConverter.Instance}}">
                            <Run Text="{Binding [AiAttackTroopsIncrease1].Description, Mode=OneWay}"/>
                            <LineBreak/>
                            <LineBreak/>
                            <Run FontSize="10" Text="Source:"/>
                            <Run FontSize="10" Text="{Binding [AiAttackTroopsIncrease1].Source, Mode=OneWay}" FontWeight="Bold"/>
                        </se:StswText>
                    </StackPanel>
                    <se:StswSeparator BorderThickness="1" Margin="-3 3"/>

                    <!-- increased recruitment speed -->
                    <se:StswSubCheck Content="Increased recruitment speed"
                                     FontWeight="Medium"
                                     IsChecked="{Binding SelectedOptions[AiIncreasedRecruitmentSpeed], Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"
                                     IsReadOnly="False"
                                     Margin="3"/>
                    <se:StswText Style="{StaticResource Description}" Visibility="{Binding ShowOptionsDetails, Source={StaticResource Settings}, Converter={x:Static se:StswBoolConverter.Instance}}">
                        <Run Text="{Binding [AiIncreasedRecruitmentSpeed].Description, Mode=OneWay}"/>
                        <LineBreak/>
                        <LineBreak/>
                        <Run FontSize="10" Text="Source:"/>
                        <Run FontSize="10" Text="{Binding [AiIncreasedRecruitmentSpeed].Source, Mode=OneWay}" FontWeight="Bold"/>
                    </se:StswText>

                </StackPanel>
            </se:StswGroupBox>

            <!-- other -->
            <se:StswGroupBox BorderThickness="1" Margin="0 5" SeparatorThickness="1">
                <se:StswGroupBox.Header>
                    <se:StswLabel Content="OTHER" FontSize="10" FontWeight="Heavy" HorizontalContentAlignment="Center" IconData="{x:Static se:StswIcons.ProgressQuestion}"/>
                </se:StswGroupBox.Header>

                <StackPanel>
                    <!-- fireproof duration -->
                    <se:StswSubCheck Content="Fireproof duration:"
                                     FontWeight="Medium"
                                     IsChecked="{Binding SelectedOptions[FireproofDuration], Mode=OneWay, Source={StaticResource Settings}, Converter={x:Static se:StswCompareConverter.Instance}, ConverterParameter='!2000', UpdateSourceTrigger=PropertyChanged}"
                                     IsReadOnly="True"
                                     Margin="3"/>
                    <DockPanel>
                        <se:StswText DockPanel.Dock="Right" Text="{Binding SelectedOptions[FireproofDuration], Mode=OneWay, Source={StaticResource Settings}}" Width="50"/>
                        <se:StswSlider Maximum="20000" TickFrequency="200" Value="{Binding SelectedOptions[FireproofDuration], Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"/>
                    </DockPanel>
                    <se:StswText Style="{StaticResource Description}" Visibility="{Binding ShowOptionsDetails, Source={StaticResource Settings}, Converter={x:Static se:StswBoolConverter.Instance}}">
                        <Run Text="{Binding [FireproofDuration].Description, Mode=OneWay}"/>
                        <LineBreak/>
                        <LineBreak/>
                        <Run FontSize="10" Text="Source:"/>
                        <Run FontSize="10" Text="{Binding [FireproofDuration].Source, Mode=OneWay}" FontWeight="Bold"/>
                    </se:StswText>
                    <se:StswSeparator BorderThickness="1" Margin="-3 3"/>

                    <!-- no extreme magicbar -->
                    <se:StswSubCheck Content="No magic bar in Extreme"
                                     FontWeight="Medium"
                                     IsChecked="{Binding SelectedOptions[NoExtremeMagicbar], Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"
                                     IsReadOnly="False"
                                     Margin="3"/>
                    <se:StswText Style="{StaticResource Description}" Visibility="{Binding ShowOptionsDetails, Source={StaticResource Settings}, Converter={x:Static se:StswBoolConverter.Instance}}">
                        <Run Text="{Binding [NoExtremeMagicbar].Description, Mode=OneWay}"/>
                        <LineBreak/>
                        <LineBreak/>
                        <Run FontSize="10" Text="Source:"/>
                        <Run FontSize="10" Text="{Binding [NoExtremeMagicbar].Source, Mode=OneWay}" FontWeight="Bold"/>
                    </se:StswText>
                    <se:StswSeparator BorderThickness="1" Margin="-3 3"/>

                    <!-- change player color -->
                    <se:StswSubCheck Content="Change player color:"
                                     FontWeight="Medium"
                                     IsChecked="{Binding SelectedOptions[ChangePlayerColor], Mode=OneWay, Source={StaticResource Settings}, Converter={x:Static se:StswCompareConverter.Instance}, ConverterParameter='!Red', UpdateSourceTrigger=PropertyChanged}"
                                     IsReadOnly="True"
                                     Margin="3"/>
                    <se:StswComboBox Margin="3" ItemsSource="{se:StswEnumToList local:PlayerColor}" SelectedValue="{Binding SelectedOptions[ChangePlayerColor], Source={StaticResource Settings}}">
                        <se:StswComboBox.ItemTemplate>
                            <DataTemplate>
                                <se:StswLabel Content="{Binding Display}" IconScale="2" IconSource="{Binding Value, Converter={local:EnumToImageSourceConverter}}" Padding="0"/>
                            </DataTemplate>
                        </se:StswComboBox.ItemTemplate>
                    </se:StswComboBox>
                    <se:StswText Style="{StaticResource Description}" Visibility="{Binding ShowOptionsDetails, Source={StaticResource Settings}, Converter={x:Static se:StswBoolConverter.Instance}}">
                        <Run Text="{Binding [ChangePlayerColor].Description, Mode=OneWay}"/>
                        <LineBreak/>
                        <LineBreak/>
                        <Run FontSize="10" Text="Source:"/>
                        <Run FontSize="10" Text="{Binding [ChangePlayerColor].Source, Mode=OneWay}" FontWeight="Bold"/>
                    </se:StswText>
                    <se:StswSeparator BorderThickness="1" Margin="-3 3"/>

                    <!-- no tent deselection -->
                    <se:StswSubCheck Content="No tent deselection"
                                     FontWeight="Medium"
                                     IsChecked="{Binding SelectedOptions[NoTentDeselection], Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"
                                     IsReadOnly="False"
                                     Margin="3"/>
                    <se:StswText Style="{StaticResource Description}" Visibility="{Binding ShowOptionsDetails, Source={StaticResource Settings}, Converter={x:Static se:StswBoolConverter.Instance}}">
                        <Run Text="{Binding [NoTentDeselection].Description, Mode=OneWay}"/>
                        <LineBreak/>
                        <LineBreak/>
                        <Run FontSize="10" Text="Source:"/>
                        <Run FontSize="10" Text="{Binding [NoTentDeselection].Source, Mode=OneWay}" FontWeight="Bold"/>
                    </se:StswText>
                    <se:StswSeparator BorderThickness="1" Margin="-3 3"/>

                    <!-- always show planned moat -->
                    <se:StswSubCheck Content="Always show planned moat"
                                     FontWeight="Medium"
                                     IsChecked="{Binding SelectedOptions[AlwaysShowPlannedMoat], Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"
                                     IsReadOnly="False"
                                     Margin="3"/>
                    <se:StswText Style="{StaticResource Description}" Visibility="{Binding ShowOptionsDetails, Source={StaticResource Settings}, Converter={x:Static se:StswBoolConverter.Instance}}">
                        <Run Text="{Binding [AlwaysShowPlannedMoat].Description, Mode=OneWay}"/>
                        <LineBreak/>
                        <LineBreak/>
                        <Run FontSize="10" Text="Source:"/>
                        <Run FontSize="10" Text="{Binding [AlwaysShowPlannedMoat].Source, Mode=OneWay}" FontWeight="Bold"/>
                    </se:StswText>
                    <se:StswSeparator BorderThickness="1" Margin="-3 3"/>

                    <!-- gates responsiveness vs enemy -->
                    <se:StswSubCheck Content="Gates responsiveness towards enemy"
                                     FontWeight="Medium"
                                     IsChecked="{Binding SelectedOptions[GatesResponsivenessVsEnemy], Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"
                                     IsReadOnly="False"
                                     Margin="3"/>
                    <se:StswText Style="{StaticResource Description}" Visibility="{Binding ShowOptionsDetails, Source={StaticResource Settings}, Converter={x:Static se:StswBoolConverter.Instance}}">
                        <Run Text="{Binding [GatesResponsivenessVsEnemy].Description, Mode=OneWay}"/>
                        <LineBreak/>
                        <LineBreak/>
                        <Run FontSize="10" Text="Source:"/>
                        <Run FontSize="10" Text="{Binding [GatesResponsivenessVsEnemy].Source, Mode=OneWay}" FontWeight="Bold"/>
                    </se:StswText>
                    <se:StswSeparator BorderThickness="1" Margin="-3 3"/>

                    <!-- spectator mode -->
                    <se:StswSubCheck Content="Spectator mode"
                                     FontWeight="Medium"
                                     IsChecked="{Binding SelectedOptions[SpectatorMode], Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"
                                     IsReadOnly="False"
                                     Margin="3"/>
                    <se:StswText Style="{StaticResource Description}" Visibility="{Binding ShowOptionsDetails, Source={StaticResource Settings}, Converter={x:Static se:StswBoolConverter.Instance}}">
                        <Run Text="{Binding [SpectatorMode].Description, Mode=OneWay}"/>
                        <LineBreak/>
                        <LineBreak/>
                        <Run FontSize="10" Text="Source:"/>
                        <Run FontSize="10" Text="{Binding [SpectatorMode].Source, Mode=OneWay}" FontWeight="Bold"/>
                    </se:StswText>
                    <se:StswSeparator BorderThickness="1" Margin="-3 3"/>

                    <!-- check available paths delay -->
                    <se:StswSubCheck Content="Check available paths delay:"
                                     FontWeight="Medium"
                                     IsChecked="{Binding SelectedOptions[CheckAvailablePathsDelay], Mode=OneWay, Source={StaticResource Settings}, Converter={x:Static se:StswCompareConverter.Instance}, ConverterParameter='!200', UpdateSourceTrigger=PropertyChanged}"
                                     IsReadOnly="True"
                                     Margin="3"/>
                    <DockPanel>
                        <se:StswText DockPanel.Dock="Right" Text="{Binding SelectedOptions[CheckAvailablePathsDelay], Mode=OneWay, Source={StaticResource Settings}}" Width="50"/>
                        <se:StswSlider Maximum="500" TickFrequency="5" Value="{Binding SelectedOptions[CheckAvailablePathsDelay], Source={StaticResource Settings}}"/>
                    </DockPanel>
                    <se:StswText Style="{StaticResource Description}" Visibility="{Binding ShowOptionsDetails, Source={StaticResource Settings}, Converter={x:Static se:StswBoolConverter.Instance}}">
                        <Run Text="{Binding [CheckAvailablePathsDelay].Description, Mode=OneWay}"/>
                        <LineBreak/>
                        <LineBreak/>
                        <Run FontSize="10" Text="Source:"/>
                        <Run FontSize="10" Text="{Binding [CheckAvailablePathsDelay].Source, Mode=OneWay}" FontWeight="Bold"/>
                    </se:StswText>
                    <se:StswSeparator BorderThickness="1" Margin="-3 3"/>

                    <!-- multiplayer default speed -->
                    <se:StswSubCheck Content="Multiplayer default speed:"
                                     FontWeight="Medium"
                                     IsChecked="{Binding SelectedOptions[MultiplayerDefaultSpeed], Mode=OneWay, Source={StaticResource Settings}, Converter={x:Static se:StswCompareConverter.Instance}, ConverterParameter='!40', UpdateSourceTrigger=PropertyChanged}"
                                     IsReadOnly="True"
                                     Margin="3"/>
                    <DockPanel>
                        <se:StswText DockPanel.Dock="Right" Text="{Binding SelectedOptions[MultiplayerDefaultSpeed], Mode=OneWay, Source={StaticResource Settings}}" Width="50"/>
                        <se:StswSlider Minimum="10" Maximum="100" TickFrequency="1"  Value="{Binding SelectedOptions[MultiplayerDefaultSpeed], Source={StaticResource Settings}}"/>
                    </DockPanel>
                    <se:StswText Style="{StaticResource Description}" Visibility="{Binding ShowOptionsDetails, Source={StaticResource Settings}, Converter={x:Static se:StswBoolConverter.Instance}}">
                        <Run Text="{Binding [MultiplayerDefaultSpeed].Description, Mode=OneWay}"/>
                        <LineBreak/>
                        <LineBreak/>
                        <Run FontSize="10" Text="Source:"/>
                        <Run FontSize="10" Text="{Binding [MultiplayerDefaultSpeed].Source, Mode=OneWay}" FontWeight="Bold"/>
                    </se:StswText>
                    <se:StswSeparator BorderThickness="1" Margin="-3 3"/>

                    <!-- decrease peasant spawnrate -->
                    <se:StswSubCheck Content="Decrease peasant spawnrate"
                                     FontWeight="Medium"
                                     IsChecked="{Binding SelectedOptions[DecreasePeasantSpawnrate], Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"
                                     IsReadOnly="False"
                                     Margin="3"/>
                    <se:StswText Style="{StaticResource Description}" Visibility="{Binding ShowOptionsDetails, Source={StaticResource Settings}, Converter={x:Static se:StswBoolConverter.Instance}}">
                        <Run Text="{Binding [DecreasePeasantSpawnrate].Description, Mode=OneWay}"/>
                        <LineBreak/>
                        <LineBreak/>
                        <Run FontSize="10" Text="Source:"/>
                        <Run FontSize="10" Text="{Binding [DecreasePeasantSpawnrate].Source, Mode=OneWay}" FontWeight="Bold"/>
                    </se:StswText>
                    <se:StswSeparator BorderThickness="1" Margin="-3 3"/>

                    <!-- skirmish delivery bonus -->
                    <se:StswSubCheck Content="Skirmish delivery % bonus:"
                                     FontWeight="Medium"
                                     IsChecked="{Binding SelectedOptions[SkirmishDeliveryBonus], Mode=OneWay, Source={StaticResource Settings}, Converter={x:Static se:StswCompareConverter.Instance}, ConverterParameter='!50', UpdateSourceTrigger=PropertyChanged}"
                                     IsReadOnly="True"
                                     Margin="3"/>
                    <DockPanel>
                        <se:StswText DockPanel.Dock="Right" Text="{Binding SelectedOptions[SkirmishDeliveryBonus], Mode=OneWay, Source={StaticResource Settings}}" Width="50"/>
                        <se:StswSlider Maximum="100" TickFrequency="1" Value="{Binding SelectedOptions[SkirmishDeliveryBonus], Source={StaticResource Settings}}"/>
                    </DockPanel>
                    <se:StswText Style="{StaticResource Description}" Visibility="{Binding ShowOptionsDetails, Source={StaticResource Settings}, Converter={x:Static se:StswBoolConverter.Instance}}">
                        <Run Text="{Binding [SkirmishDeliveryBonus].Description, Mode=OneWay}"/>
                        <LineBreak/>
                        <LineBreak/>
                        <Run FontSize="10" Text="Source:"/>
                        <Run FontSize="10" Text="{Binding [SkirmishDeliveryBonus].Source, Mode=OneWay}" FontWeight="Bold"/>
                    </se:StswText>
                    <se:StswSeparator BorderThickness="1" Margin="-3 3"/>

                    <!-- shrink orchard build size -->
                    <se:StswSubCheck Content="Shrink orchard build size"
                                     FontWeight="Medium"
                                     IsChecked="{Binding SelectedOptions[ShrinkOrchardBuildSize], Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"
                                     IsReadOnly="False"
                                     Margin="3"/>
                    <se:StswText Style="{StaticResource Description}" Visibility="{Binding ShowOptionsDetails, Source={StaticResource Settings}, Converter={x:Static se:StswBoolConverter.Instance}}">
                        <Run Text="{Binding [ShrinkOrchardBuildSize].Description, Mode=OneWay}"/>
                        <LineBreak/>
                        <LineBreak/>
                        <Run FontSize="10" Text="Source:"/>
                        <Run FontSize="10" Text="{Binding [ShrinkOrchardBuildSize].Source, Mode=OneWay}" FontWeight="Bold"/>
                    </se:StswText>
                    <se:StswSeparator BorderThickness="1" Margin="-3 3"/>

                    <!-- iron mine double pickup -->
                    <se:StswSubCheck Content="Iron mine double pickup"
                                     FontWeight="Medium"
                                     IsChecked="{Binding SelectedOptions[IronMineDoublePickup], Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"
                                     IsReadOnly="False"
                                     Margin="3"/>
                    <se:StswText Style="{StaticResource Description}" Visibility="{Binding ShowOptionsDetails, Source={StaticResource Settings}, Converter={x:Static se:StswBoolConverter.Instance}}">
                        <Run Text="{Binding [IronMineDoublePickup].Description, Mode=OneWay}"/>
                        <LineBreak/>
                        <LineBreak/>
                        <Run FontSize="10" Text="Source:"/>
                        <Run FontSize="10" Text="{Binding [IronMineDoublePickup].Source, Mode=OneWay}" FontWeight="Bold"/>
                    </se:StswText>
                    
                </StackPanel>
            </se:StswGroupBox>
        </StackPanel>
    </se:StswScrollView>
</UserControl>
